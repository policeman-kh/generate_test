/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 05 13:14:45 GMT 2019
 */

package test.evosuite;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import test.NumberUtils;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NumberUtils_ESTest extends NumberUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      boolean boolean0 = NumberUtils.isOddNumberBetween1And50(50);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      boolean boolean0 = NumberUtils.isEvenNumberBetween1And100(100);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      boolean boolean0 = NumberUtils.isOddNumberBetween1And50(42);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try { 
        NumberUtils.isOddNumberBetween1And50(1046);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input should be between 1 and 50.
         //
         verifyException("test.NumberUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      boolean boolean0 = NumberUtils.isOddNumberBetween1And50(45);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      // Undeclared exception!
      try { 
        NumberUtils.isOddNumberBetween1And50(0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input should be between 1 and 50.
         //
         verifyException("test.NumberUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      boolean boolean0 = NumberUtils.isEvenNumberBetween1And100(45);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      // Undeclared exception!
      try { 
        NumberUtils.isEvenNumberBetween1And100(3098);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input should be between 1 and 100.
         //
         verifyException("test.NumberUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      // Undeclared exception!
      try { 
        NumberUtils.isEvenNumberBetween1And100((-1658));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // input should be between 1 and 100.
         //
         verifyException("test.NumberUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      NumberUtils numberUtils0 = new NumberUtils();
  }
}
